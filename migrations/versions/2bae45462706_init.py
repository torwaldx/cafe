"""init

Revision ID: 2bae45462706
Revises: 
Create Date: 2025-05-04 06:11:46.319212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2bae45462706'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('establishments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('yandex_id', sa.BigInteger(), nullable=False),
    sa.Column('y_name', sa.String(length=128), nullable=False),
    sa.Column('y_address', sa.String(length=128), nullable=False),
    sa.Column('latitude', sa.DECIMAL(precision=9, scale=6), nullable=False),
    sa.Column('longitude', sa.DECIMAL(precision=9, scale=6), nullable=False),
    sa.Column('rating', sa.DECIMAL(precision=3, scale=2), nullable=False),
    sa.Column('reviews_count', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('y_text', sa.Text(), nullable=True),
    sa.Column('gen_text', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_type', sa.String(length=64), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default='0', nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task', sa.String(length=512), nullable=False),
    sa.Column('script_module', sa.String(length=255), nullable=False),
    sa.Column('count', sa.Integer(), server_default='1', nullable=True),
    sa.Column('schedule_type', sa.String(length=20), server_default='hour', nullable=True),
    sa.Column('schedule_time', sa.String(length=10), server_default=':00', nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default='1', nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_user_id', sa.BigInteger(), nullable=False),
    sa.Column('tg_user_name', sa.String(length=255), nullable=True),
    sa.Column('last_update_check', sa.DateTime(), nullable=True),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_user_id')
    )
    op.create_table('establishments_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('category', sa.Integer(), nullable=True),
    sa.Column('establishment', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category'], ['categories.id'], name='fk_establishments_categories_categories_category_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['establishment'], ['establishments.id'], name='fk_establishments_categories_establishments_establishment_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('establishment', sa.Integer(), nullable=True),
    sa.Column('added_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['establishment'], ['establishments.id'], name='fk_favorites_establishments_id_establishment', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user'], ['users.id'], name='fk_favorites_users_id_user', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instagram_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inst_user_id', sa.BigInteger(), nullable=True),
    sa.Column('inst_username', sa.String(length=100), nullable=False),
    sa.Column('last_message_time', sa.Integer(), server_default='0', nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source'], ['sources.id'], name='fk_instagram_accounts_sources_id_source', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(length=128), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('estimated_name', sa.String(length=128), nullable=True),
    sa.Column('estimated_address', sa.String(length=128), nullable=True),
    sa.Column('estimated_category', sa.String(length=128), nullable=True),
    sa.Column('establishment', sa.Integer(), nullable=True),
    sa.Column('attempt_count', sa.Integer(), server_default='0', nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['establishment'], ['establishments.id'], name='fk_messages_establishments_id_establishment', onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['source'], ['sources.id'], name='fk_messages_sources_id_source', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tg_channels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tg_chat_id', sa.BigInteger(), nullable=True),
    sa.Column('tg_name', sa.String(length=100), nullable=True),
    sa.Column('tg_link', sa.String(length=100), nullable=True),
    sa.Column('last_message_id', sa.Integer(), server_default='1', nullable=True),
    sa.Column('source', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source'], ['sources.id'], name='fk_tg_channels_sources_id_source', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('y_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('link', sa.String(length=256), nullable=False),
    sa.Column('establishment', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['establishment'], ['establishments.id'], name='fk_y_images_establishments_id_establishment', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    with open('migrations/versions/init_seed.sql') as f:
        sql_statements = f.read()

    bind = op.get_bind()
    for statement in sql_statements.strip().split(';'):
        stmt = statement.strip()
        if stmt:
            bind.execute(sa.text(stmt))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('y_images')
    op.drop_table('tg_channels')
    op.drop_table('messages')
    op.drop_table('instagram_accounts')
    op.drop_table('favorites')
    op.drop_table('establishments_categories')
    op.drop_table('users')
    op.drop_table('tasks')
    op.drop_table('sources')
    op.drop_table('establishments')
    op.drop_table('categories')
    # ### end Alembic commands ###
